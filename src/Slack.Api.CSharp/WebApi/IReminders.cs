// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Reminders operations.
    /// </summary>
    public partial interface IReminders
    {
        /// <summary>
        /// Creates a reminder.
        /// <see href="https://api.slack.com/methods/reminders.add" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `reminders:write`
        /// </param>
        /// <param name='text'>
        /// The content of the reminder
        /// </param>
        /// <param name='user'>
        /// The user who will receive the reminder. If no user is specified,
        /// the reminder will go to user who created it.
        /// </param>
        /// <param name='time'>
        /// When this reminder should happen: the Unix timestamp (up to five
        /// years from now), the number of seconds until the reminder (if
        /// within 24 hours), or a natural language description (Ex. "in 15
        /// minutes," or "every Thursday")
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="AddErrorModel3Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<AddOKResponseModelModelModel>> AddWithHttpMessagesAsync(string token = default(string), string text = default(string), string user = default(string), string time = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Marks a reminder as complete.
        /// <see href="https://api.slack.com/methods/reminders.complete" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `reminders:write`
        /// </param>
        /// <param name='reminder'>
        /// The ID of the reminder to be marked as complete
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="CompleteErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<CompleteOKResponse>> CompleteWithHttpMessagesAsync(string token = default(string), string reminder = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Deletes a reminder.
        /// <see href="https://api.slack.com/methods/reminders.delete" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `reminders:write`
        /// </param>
        /// <param name='reminder'>
        /// The ID of the reminder
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="DeleteErrorModel3Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<DeleteOKResponseModelModelModel>> DeleteWithHttpMessagesAsync(string token = default(string), string reminder = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Gets information about a reminder.
        /// <see href="https://api.slack.com/methods/reminders.info" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `reminders:read`
        /// </param>
        /// <param name='reminder'>
        /// The ID of the reminder
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="InfoErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<InfoOKResponse>> InfoWithHttpMessagesAsync(string token = default(string), string reminder = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists all reminders created by or for a given user.
        /// <see href="https://api.slack.com/methods/reminders.list" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `reminders:read`
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ListErrorModel11Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<ListOKResponseModelModelModelModel>> ListWithHttpMessagesAsync(string token = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
