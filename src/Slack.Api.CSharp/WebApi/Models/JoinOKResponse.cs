// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// channels.join schema
    /// </summary>
    /// <remarks>
    /// Schema for successful response from channels.join method
    /// </remarks>
    public partial class JoinOKResponse
    {
        /// <summary>
        /// Initializes a new instance of the JoinOKResponse class.
        /// </summary>
        public JoinOKResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JoinOKResponse class.
        /// </summary>
        public JoinOKResponse(ObjsChannel channel, bool? alreadyInChannel = default(bool?))
        {
            AlreadyInChannel = alreadyInChannel;
            Channel = channel;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for JoinOKResponse class.
        /// </summary>
        static JoinOKResponse()
        {
            Ok = true;
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "already_in_channel")]
        public bool? AlreadyInChannel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channel")]
        public ObjsChannel Channel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ok")]
        public static bool Ok { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Channel == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Channel");
            }
            if (Channel != null)
            {
                Channel.Validate();
            }
        }
    }
}
