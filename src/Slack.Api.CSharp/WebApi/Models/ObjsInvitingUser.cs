// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ObjsInvitingUser
    {
        /// <summary>
        /// Initializes a new instance of the ObjsInvitingUser class.
        /// </summary>
        public ObjsInvitingUser()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ObjsInvitingUser class.
        /// </summary>
        public ObjsInvitingUser(string id, bool isAppUser, bool isRestricted, bool isUltraRestricted, string name, ObjsUserProfileShortest profile, string teamId, double updated, string realName = default(string))
        {
            Id = id;
            IsAppUser = isAppUser;
            IsRestricted = isRestricted;
            IsUltraRestricted = isUltraRestricted;
            Name = name;
            Profile = profile;
            RealName = realName;
            TeamId = teamId;
            Updated = updated;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_app_user")]
        public bool IsAppUser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_restricted")]
        public bool IsRestricted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_ultra_restricted")]
        public bool IsUltraRestricted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "profile")]
        public ObjsUserProfileShortest Profile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "real_name")]
        public string RealName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "team_id")]
        public string TeamId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updated")]
        public double Updated { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (Profile == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Profile");
            }
            if (TeamId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TeamId");
            }
            if (Profile != null)
            {
                Profile.Validate();
            }
        }
    }
}
