// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// files.upload error schema
    /// </summary>
    /// <remarks>
    /// Schema for error response files.upload method
    /// </remarks>
    public partial class UploadErrorModel
    {
        /// <summary>
        /// Initializes a new instance of the UploadErrorModel class.
        /// </summary>
        public UploadErrorModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the UploadErrorModel class.
        /// </summary>
        /// <param name="error">Possible values include:
        /// 'posting_to_general_channel_denied', 'invalid_channel',
        /// 'file_uploads_disabled', 'file_uploads_except_images_disabled',
        /// 'storage_limit_reached', 'not_authed', 'invalid_auth',
        /// 'account_inactive', 'no_permission', 'invalid_arg_name',
        /// 'invalid_array_arg', 'invalid_charset', 'invalid_form_data',
        /// 'invalid_post_type', 'missing_post_type', 'team_added_to_org',
        /// 'invalid_json', 'json_not_object', 'request_timeout',
        /// 'upgrade_required'</param>
        public UploadErrorModel(string error)
        {
            Error = error;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for UploadErrorModel class.
        /// </summary>
        static UploadErrorModel()
        {
            Ok = false;
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets possible values include:
        /// 'posting_to_general_channel_denied', 'invalid_channel',
        /// 'file_uploads_disabled', 'file_uploads_except_images_disabled',
        /// 'storage_limit_reached', 'not_authed', 'invalid_auth',
        /// 'account_inactive', 'no_permission', 'invalid_arg_name',
        /// 'invalid_array_arg', 'invalid_charset', 'invalid_form_data',
        /// 'invalid_post_type', 'missing_post_type', 'team_added_to_org',
        /// 'invalid_json', 'json_not_object', 'request_timeout',
        /// 'upgrade_required'
        /// </summary>
        [JsonProperty(PropertyName = "error")]
        public string Error { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ok")]
        public static bool Ok { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Error == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Error");
            }
        }
    }
}
