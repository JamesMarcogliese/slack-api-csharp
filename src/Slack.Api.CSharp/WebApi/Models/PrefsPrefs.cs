// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// User Prefs object
    /// </summary>
    public partial class PrefsPrefs
    {
        /// <summary>
        /// Initializes a new instance of the PrefsPrefs class.
        /// </summary>
        public PrefsPrefs()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the PrefsPrefs class.
        /// </summary>
        public PrefsPrefs(bool? a11yAnimations = default(bool?), string a11yFontSize = default(string), bool? allChannelsLoud = default(bool?), string allNotificationsPrefs = default(string), string allUnreadsSortOrder = default(string), bool? allowCallsToSetCurrentStatus = default(bool?), bool? allowCmdTabIss = default(bool?), bool? analyticsUpsellCoachmarkSeen = default(bool?), bool? arrowHistory = default(bool?), string atChannelSuppressedChannels = default(string), bool? boxEnabled = default(bool?), string channelSort = default(string), string clientLogsPri = default(string), bool? colorNamesInList = default(bool?), bool? confirmClearAllUnreads = default(bool?), bool? confirmShCallStart = default(bool?), bool? confirmUserMarkedAway = default(bool?), bool? convertEmoticons = default(bool?), bool? displayDisplayNames = default(bool?), int? displayRealNamesOverride = default(int?), bool? dndEnabled = default(bool?), string dndEndHour = default(string), string dndStartHour = default(string), bool? dropboxEnabled = default(bool?), string emailAlerts = default(string), int? emailAlertsSleepUntil = default(int?), bool? emailDeveloper = default(bool?), bool? emailMisc = default(bool?), bool? emailOffers = default(bool?), bool? emailResearch = default(bool?), bool? emailTips = default(bool?), bool? emailWeekly = default(bool?), bool? emojiAutocompleteBig = default(bool?), string emojiMode = default(string), string emojiUse = default(string), bool? enableReactEmojiPicker = default(bool?), bool? enableUnreadView = default(bool?), bool? enhancedDebugging = default(bool?), bool? entOrgWideChannelsSidebar = default(bool?), bool? enterIsSpecialInTbt = default(bool?), object enterpriseExcludedAppTeams = default(object), string enterpriseMdmCustomMsg = default(string), bool? enterpriseMigrationSeen = default(bool?), bool? expandInlineImgs = default(bool?), bool? expandInternalInlineImgs = default(bool?), bool? expandNonMediaAttachments = default(bool?), bool? expandSnippets = default(bool?), bool? fKeySearch = default(bool?), string flannelServerPool = default(string), string folderData = default(string), bool? foldersEnabled = default(bool?), string frecencyEntJumper = default(string), string frecencyEntJumperBackup = default(string), string frecencyJumper = default(string), bool? fullTextExtracts = default(bool?), bool? fullerTimestamps = default(bool?), bool? gdriveAuthed = default(bool?), bool? gdriveEnabled = default(bool?), bool? graphicEmoticons = default(bool?), bool? growlsEnabled = default(bool?), string growthAllBannersPrefs = default(string), int? growthMsgLimitApproachingCtaCount = default(int?), int? growthMsgLimitApproachingCtaTs = default(int?), int? growthMsgLimitLongReachedCtaCount = default(int?), int? growthMsgLimitLongReachedCtaLastTs = default(int?), int? growthMsgLimitReachedCtaCount = default(int?), int? growthMsgLimitReachedCtaLastTs = default(int?), int? growthMsgLimitSixtyDayBannerCtaCount = default(int?), int? growthMsgLimitSixtyDayBannerCtaLastTs = default(int?), bool? hasCreatedChannel = default(bool?), bool? hasInvited = default(bool?), bool? hasRecentlySharedAChannel = default(bool?), bool? hasSearched = default(bool?), bool? hasUploaded = default(bool?), bool? hideHexSwatch = default(bool?), bool? hideUserGroupInfoPane = default(bool?), string highlightWords = default(string), bool? inInteractiveMasMigrationFlow = default(bool?), bool? introToAppsMessageSeen = default(bool?), bool? jumbomoji = default(bool?), bool? kKeyOmnibox = default(bool?), int? kKeyOmniboxAutoHideCount = default(int?), object keyboard = default(object), int? lastSeenAtChannelWarning = default(int?), string lastSnippetType = default(string), string lastTosAcknowledged = default(string), bool? lessonsEnabled = default(bool?), bool? loadLato2 = default(bool?), string locale = default(string), PrefsPrefsLocalesEnabled localesEnabled = default(PrefsPrefsLocalesEnabled), string loudChannels = default(string), string loudChannelsSet = default(string), bool? lsDisabled = default(bool?), string macSsbBounce = default(string), bool? macSsbBullet = default(bool?), bool? markMsgsReadImmediately = default(bool?), bool? measureCssUsage = default(bool?), bool? mentionsExcludeAtChannels = default(bool?), bool? mentionsExcludeAtUserGroups = default(bool?), string messagesTheme = default(string), bool? msgInputSendBtn = default(bool?), bool? msgInputSendBtnAutoSet = default(bool?), bool? msgPreview = default(bool?), bool? msgPreviewPersistent = default(bool?), bool? muteSounds = default(bool?), string mutedChannels = default(string), string neverChannels = default(string), string newMsgSnd = default(string), int? newxpSeenLastMessage = default(int?), bool? noCreatedOverlays = default(bool?), bool? noInvitesWidgetInSidebar = default(bool?), bool? noJoinedOverlays = default(bool?), bool? noMacelectronBanner = default(bool?), bool? noMacssb1Banner = default(bool?), bool? noMacssb2Banner = default(bool?), bool? noOmniboxInChannels = default(bool?), bool? noTextInNotifications = default(bool?), bool? noWinssb1Banner = default(bool?), bool? obeyInlineImgLimit = default(bool?), bool? onboardingCancelled = default(bool?), int? onboardingSlackbotConversationStep = default(int?), bool? overloadedMessageEnabled = default(bool?), bool? pagekeysHandled = default(bool?), bool? postsFormattingGuide = default(bool?), string preferredSkinTone = default(string), bool? privacyPolicySeen = default(bool?), bool? promptedForEmailDisabling = default(bool?), bool? purchaser = default(bool?), string pushAtChannelSuppressedChannels = default(string), bool? pushDmAlert = default(bool?), bool? pushEverything = default(bool?), int? pushIdleWait = default(int?), string pushLoudChannels = default(string), string pushLoudChannelsSet = default(string), bool? pushMentionAlert = default(bool?), string pushMentionChannels = default(string), bool? pushShowPreview = default(bool?), string pushSound = default(string), bool? requireAt = default(bool?), bool? searchExcludeBots = default(bool?), string searchExcludeChannels = default(string), bool? searchOnlyCurrentTeam = default(bool?), bool? searchOnlyMyChannels = default(bool?), string searchSort = default(string), bool? seenAdministrationMenu = default(bool?), bool? seenAppSpaceCoachmark = default(bool?), bool? seenAppSpaceTutorial = default(bool?), bool? seenCallsInteractiveCoachmark = default(bool?), bool? seenChannelBrowserAdminCoachmark = default(bool?), bool? seenCustomStatusBadge = default(bool?), bool? seenCustomStatusCallout = default(bool?), bool? seenDomainInviteReminder = default(bool?), bool? seenEmojiUpdateOverlayCoachmark = default(bool?), bool? seenGdriveCoachmark = default(bool?), bool? seenGuestAdminSlackbotAnnouncement = default(bool?), bool? seenHighlightsArrowsCoachmark = default(bool?), bool? seenHighlightsCoachmark = default(bool?), bool? seenHighlightsWarmWelcome = default(bool?), bool? seenIntlChannelNamesCoachmark = default(bool?), bool? seenJapaneseLocaleChangeMessage = default(bool?), bool? seenKeyboardShortcutsCoachmark = default(bool?), int? seenLocaleChangeMessage = default(int?), bool? seenMemberInviteReminder = default(bool?), bool? seenNameTaggingCoachmark = default(bool?), bool? seenOnboardingBanner = default(bool?), bool? seenOnboardingChannels = default(bool?), bool? seenOnboardingDirectMessages = default(bool?), bool? seenOnboardingInvites = default(bool?), bool? seenOnboardingPrivateGroups = default(bool?), bool? seenOnboardingRecentMentions = default(bool?), bool? seenOnboardingSearch = default(bool?), bool? seenOnboardingSlackbotConversation = default(bool?), bool? seenOnboardingStarredItems = default(bool?), bool? seenOnboardingStart = default(bool?), bool? seenSharedChannelsCoachmark = default(bool?), bool? seenSharedChannelsOptInChangeMessage = default(bool?), bool? seenShdepSlackbotMessage = default(bool?), bool? seenSingleEmojiMsg = default(bool?), bool? seenSsbPrompt = default(bool?), bool? seenThreadsNotificationBanner = default(bool?), bool? seenUnreadViewCoachmark = default(bool?), bool? seenWelcome2 = default(bool?), bool? separatePrivateChannels = default(bool?), bool? separateSharedChannels = default(bool?), bool? shdepPromoCodeSubmitted = default(bool?), bool? showAllSkinTones = default(bool?), bool? showEntOnboarding = default(bool?), bool? showJumperScores = default(bool?), bool? showMemoryInstrument = default(bool?), bool? showSidebarQuickswitcherButton = default(bool?), bool? showTyping = default(bool?), string sidebarBehavior = default(string), string sidebarTheme = default(string), string sidebarThemeCustomValues = default(string), bool? snippetEditorWrapLongLines = default(bool?), bool? spacesNewXpBannerDismissed = default(bool?), bool? ssEmojis = default(bool?), string ssbSpaceWindow = default(string), bool? startScrollAtOldest = default(bool?), bool? tabUiReturnSelects = default(bool?), bool? threadsEverything = default(bool?), bool? time24 = default(bool?), bool? twoFactorAuthEnabled = default(bool?), object twoFactorBackupType = default(object), object twoFactorType = default(object), string tz = default(string), string userColors = default(string), bool? webappSpellcheck = default(bool?), bool? welcomeMessageHidden = default(bool?), int? whatsNewRead = default(int?), bool? winssbRunFromTray = default(bool?), string winssbWindowFlashBehavior = default(string))
        {
            A11yAnimations = a11yAnimations;
            A11yFontSize = a11yFontSize;
            AllChannelsLoud = allChannelsLoud;
            AllNotificationsPrefs = allNotificationsPrefs;
            AllUnreadsSortOrder = allUnreadsSortOrder;
            AllowCallsToSetCurrentStatus = allowCallsToSetCurrentStatus;
            AllowCmdTabIss = allowCmdTabIss;
            AnalyticsUpsellCoachmarkSeen = analyticsUpsellCoachmarkSeen;
            ArrowHistory = arrowHistory;
            AtChannelSuppressedChannels = atChannelSuppressedChannels;
            BoxEnabled = boxEnabled;
            ChannelSort = channelSort;
            ClientLogsPri = clientLogsPri;
            ColorNamesInList = colorNamesInList;
            ConfirmClearAllUnreads = confirmClearAllUnreads;
            ConfirmShCallStart = confirmShCallStart;
            ConfirmUserMarkedAway = confirmUserMarkedAway;
            ConvertEmoticons = convertEmoticons;
            DisplayDisplayNames = displayDisplayNames;
            DisplayRealNamesOverride = displayRealNamesOverride;
            DndEnabled = dndEnabled;
            DndEndHour = dndEndHour;
            DndStartHour = dndStartHour;
            DropboxEnabled = dropboxEnabled;
            EmailAlerts = emailAlerts;
            EmailAlertsSleepUntil = emailAlertsSleepUntil;
            EmailDeveloper = emailDeveloper;
            EmailMisc = emailMisc;
            EmailOffers = emailOffers;
            EmailResearch = emailResearch;
            EmailTips = emailTips;
            EmailWeekly = emailWeekly;
            EmojiAutocompleteBig = emojiAutocompleteBig;
            EmojiMode = emojiMode;
            EmojiUse = emojiUse;
            EnableReactEmojiPicker = enableReactEmojiPicker;
            EnableUnreadView = enableUnreadView;
            EnhancedDebugging = enhancedDebugging;
            EntOrgWideChannelsSidebar = entOrgWideChannelsSidebar;
            EnterIsSpecialInTbt = enterIsSpecialInTbt;
            EnterpriseExcludedAppTeams = enterpriseExcludedAppTeams;
            EnterpriseMdmCustomMsg = enterpriseMdmCustomMsg;
            EnterpriseMigrationSeen = enterpriseMigrationSeen;
            ExpandInlineImgs = expandInlineImgs;
            ExpandInternalInlineImgs = expandInternalInlineImgs;
            ExpandNonMediaAttachments = expandNonMediaAttachments;
            ExpandSnippets = expandSnippets;
            FKeySearch = fKeySearch;
            FlannelServerPool = flannelServerPool;
            FolderData = folderData;
            FoldersEnabled = foldersEnabled;
            FrecencyEntJumper = frecencyEntJumper;
            FrecencyEntJumperBackup = frecencyEntJumperBackup;
            FrecencyJumper = frecencyJumper;
            FullTextExtracts = fullTextExtracts;
            FullerTimestamps = fullerTimestamps;
            GdriveAuthed = gdriveAuthed;
            GdriveEnabled = gdriveEnabled;
            GraphicEmoticons = graphicEmoticons;
            GrowlsEnabled = growlsEnabled;
            GrowthAllBannersPrefs = growthAllBannersPrefs;
            GrowthMsgLimitApproachingCtaCount = growthMsgLimitApproachingCtaCount;
            GrowthMsgLimitApproachingCtaTs = growthMsgLimitApproachingCtaTs;
            GrowthMsgLimitLongReachedCtaCount = growthMsgLimitLongReachedCtaCount;
            GrowthMsgLimitLongReachedCtaLastTs = growthMsgLimitLongReachedCtaLastTs;
            GrowthMsgLimitReachedCtaCount = growthMsgLimitReachedCtaCount;
            GrowthMsgLimitReachedCtaLastTs = growthMsgLimitReachedCtaLastTs;
            GrowthMsgLimitSixtyDayBannerCtaCount = growthMsgLimitSixtyDayBannerCtaCount;
            GrowthMsgLimitSixtyDayBannerCtaLastTs = growthMsgLimitSixtyDayBannerCtaLastTs;
            HasCreatedChannel = hasCreatedChannel;
            HasInvited = hasInvited;
            HasRecentlySharedAChannel = hasRecentlySharedAChannel;
            HasSearched = hasSearched;
            HasUploaded = hasUploaded;
            HideHexSwatch = hideHexSwatch;
            HideUserGroupInfoPane = hideUserGroupInfoPane;
            HighlightWords = highlightWords;
            InInteractiveMasMigrationFlow = inInteractiveMasMigrationFlow;
            IntroToAppsMessageSeen = introToAppsMessageSeen;
            Jumbomoji = jumbomoji;
            KKeyOmnibox = kKeyOmnibox;
            KKeyOmniboxAutoHideCount = kKeyOmniboxAutoHideCount;
            Keyboard = keyboard;
            LastSeenAtChannelWarning = lastSeenAtChannelWarning;
            LastSnippetType = lastSnippetType;
            LastTosAcknowledged = lastTosAcknowledged;
            LessonsEnabled = lessonsEnabled;
            LoadLato2 = loadLato2;
            Locale = locale;
            LocalesEnabled = localesEnabled;
            LoudChannels = loudChannels;
            LoudChannelsSet = loudChannelsSet;
            LsDisabled = lsDisabled;
            MacSsbBounce = macSsbBounce;
            MacSsbBullet = macSsbBullet;
            MarkMsgsReadImmediately = markMsgsReadImmediately;
            MeasureCssUsage = measureCssUsage;
            MentionsExcludeAtChannels = mentionsExcludeAtChannels;
            MentionsExcludeAtUserGroups = mentionsExcludeAtUserGroups;
            MessagesTheme = messagesTheme;
            MsgInputSendBtn = msgInputSendBtn;
            MsgInputSendBtnAutoSet = msgInputSendBtnAutoSet;
            MsgPreview = msgPreview;
            MsgPreviewPersistent = msgPreviewPersistent;
            MuteSounds = muteSounds;
            MutedChannels = mutedChannels;
            NeverChannels = neverChannels;
            NewMsgSnd = newMsgSnd;
            NewxpSeenLastMessage = newxpSeenLastMessage;
            NoCreatedOverlays = noCreatedOverlays;
            NoInvitesWidgetInSidebar = noInvitesWidgetInSidebar;
            NoJoinedOverlays = noJoinedOverlays;
            NoMacelectronBanner = noMacelectronBanner;
            NoMacssb1Banner = noMacssb1Banner;
            NoMacssb2Banner = noMacssb2Banner;
            NoOmniboxInChannels = noOmniboxInChannels;
            NoTextInNotifications = noTextInNotifications;
            NoWinssb1Banner = noWinssb1Banner;
            ObeyInlineImgLimit = obeyInlineImgLimit;
            OnboardingCancelled = onboardingCancelled;
            OnboardingSlackbotConversationStep = onboardingSlackbotConversationStep;
            OverloadedMessageEnabled = overloadedMessageEnabled;
            PagekeysHandled = pagekeysHandled;
            PostsFormattingGuide = postsFormattingGuide;
            PreferredSkinTone = preferredSkinTone;
            PrivacyPolicySeen = privacyPolicySeen;
            PromptedForEmailDisabling = promptedForEmailDisabling;
            Purchaser = purchaser;
            PushAtChannelSuppressedChannels = pushAtChannelSuppressedChannels;
            PushDmAlert = pushDmAlert;
            PushEverything = pushEverything;
            PushIdleWait = pushIdleWait;
            PushLoudChannels = pushLoudChannels;
            PushLoudChannelsSet = pushLoudChannelsSet;
            PushMentionAlert = pushMentionAlert;
            PushMentionChannels = pushMentionChannels;
            PushShowPreview = pushShowPreview;
            PushSound = pushSound;
            RequireAt = requireAt;
            SearchExcludeBots = searchExcludeBots;
            SearchExcludeChannels = searchExcludeChannels;
            SearchOnlyCurrentTeam = searchOnlyCurrentTeam;
            SearchOnlyMyChannels = searchOnlyMyChannels;
            SearchSort = searchSort;
            SeenAdministrationMenu = seenAdministrationMenu;
            SeenAppSpaceCoachmark = seenAppSpaceCoachmark;
            SeenAppSpaceTutorial = seenAppSpaceTutorial;
            SeenCallsInteractiveCoachmark = seenCallsInteractiveCoachmark;
            SeenChannelBrowserAdminCoachmark = seenChannelBrowserAdminCoachmark;
            SeenCustomStatusBadge = seenCustomStatusBadge;
            SeenCustomStatusCallout = seenCustomStatusCallout;
            SeenDomainInviteReminder = seenDomainInviteReminder;
            SeenEmojiUpdateOverlayCoachmark = seenEmojiUpdateOverlayCoachmark;
            SeenGdriveCoachmark = seenGdriveCoachmark;
            SeenGuestAdminSlackbotAnnouncement = seenGuestAdminSlackbotAnnouncement;
            SeenHighlightsArrowsCoachmark = seenHighlightsArrowsCoachmark;
            SeenHighlightsCoachmark = seenHighlightsCoachmark;
            SeenHighlightsWarmWelcome = seenHighlightsWarmWelcome;
            SeenIntlChannelNamesCoachmark = seenIntlChannelNamesCoachmark;
            SeenJapaneseLocaleChangeMessage = seenJapaneseLocaleChangeMessage;
            SeenKeyboardShortcutsCoachmark = seenKeyboardShortcutsCoachmark;
            SeenLocaleChangeMessage = seenLocaleChangeMessage;
            SeenMemberInviteReminder = seenMemberInviteReminder;
            SeenNameTaggingCoachmark = seenNameTaggingCoachmark;
            SeenOnboardingBanner = seenOnboardingBanner;
            SeenOnboardingChannels = seenOnboardingChannels;
            SeenOnboardingDirectMessages = seenOnboardingDirectMessages;
            SeenOnboardingInvites = seenOnboardingInvites;
            SeenOnboardingPrivateGroups = seenOnboardingPrivateGroups;
            SeenOnboardingRecentMentions = seenOnboardingRecentMentions;
            SeenOnboardingSearch = seenOnboardingSearch;
            SeenOnboardingSlackbotConversation = seenOnboardingSlackbotConversation;
            SeenOnboardingStarredItems = seenOnboardingStarredItems;
            SeenOnboardingStart = seenOnboardingStart;
            SeenSharedChannelsCoachmark = seenSharedChannelsCoachmark;
            SeenSharedChannelsOptInChangeMessage = seenSharedChannelsOptInChangeMessage;
            SeenShdepSlackbotMessage = seenShdepSlackbotMessage;
            SeenSingleEmojiMsg = seenSingleEmojiMsg;
            SeenSsbPrompt = seenSsbPrompt;
            SeenThreadsNotificationBanner = seenThreadsNotificationBanner;
            SeenUnreadViewCoachmark = seenUnreadViewCoachmark;
            SeenWelcome2 = seenWelcome2;
            SeparatePrivateChannels = separatePrivateChannels;
            SeparateSharedChannels = separateSharedChannels;
            ShdepPromoCodeSubmitted = shdepPromoCodeSubmitted;
            ShowAllSkinTones = showAllSkinTones;
            ShowEntOnboarding = showEntOnboarding;
            ShowJumperScores = showJumperScores;
            ShowMemoryInstrument = showMemoryInstrument;
            ShowSidebarQuickswitcherButton = showSidebarQuickswitcherButton;
            ShowTyping = showTyping;
            SidebarBehavior = sidebarBehavior;
            SidebarTheme = sidebarTheme;
            SidebarThemeCustomValues = sidebarThemeCustomValues;
            SnippetEditorWrapLongLines = snippetEditorWrapLongLines;
            SpacesNewXpBannerDismissed = spacesNewXpBannerDismissed;
            SsEmojis = ssEmojis;
            SsbSpaceWindow = ssbSpaceWindow;
            StartScrollAtOldest = startScrollAtOldest;
            TabUiReturnSelects = tabUiReturnSelects;
            ThreadsEverything = threadsEverything;
            Time24 = time24;
            TwoFactorAuthEnabled = twoFactorAuthEnabled;
            TwoFactorBackupType = twoFactorBackupType;
            TwoFactorType = twoFactorType;
            Tz = tz;
            UserColors = userColors;
            WebappSpellcheck = webappSpellcheck;
            WelcomeMessageHidden = welcomeMessageHidden;
            WhatsNewRead = whatsNewRead;
            WinssbRunFromTray = winssbRunFromTray;
            WinssbWindowFlashBehavior = winssbWindowFlashBehavior;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "a11y_animations")]
        public bool? A11yAnimations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "a11y_font_size")]
        public string A11yFontSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "all_channels_loud")]
        public bool? AllChannelsLoud { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "all_notifications_prefs")]
        public string AllNotificationsPrefs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "all_unreads_sort_order")]
        public string AllUnreadsSortOrder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allow_calls_to_set_current_status")]
        public bool? AllowCallsToSetCurrentStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allow_cmd_tab_iss")]
        public bool? AllowCmdTabIss { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "analytics_upsell_coachmark_seen")]
        public bool? AnalyticsUpsellCoachmarkSeen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "arrow_history")]
        public bool? ArrowHistory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "at_channel_suppressed_channels")]
        public string AtChannelSuppressedChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "box_enabled")]
        public bool? BoxEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "channel_sort")]
        public string ChannelSort { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "client_logs_pri")]
        public string ClientLogsPri { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "color_names_in_list")]
        public bool? ColorNamesInList { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "confirm_clear_all_unreads")]
        public bool? ConfirmClearAllUnreads { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "confirm_sh_call_start")]
        public bool? ConfirmShCallStart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "confirm_user_marked_away")]
        public bool? ConfirmUserMarkedAway { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "convert_emoticons")]
        public bool? ConvertEmoticons { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "display_display_names")]
        public bool? DisplayDisplayNames { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "display_real_names_override")]
        public int? DisplayRealNamesOverride { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dnd_enabled")]
        public bool? DndEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dnd_end_hour")]
        public string DndEndHour { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dnd_start_hour")]
        public string DndStartHour { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "dropbox_enabled")]
        public bool? DropboxEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_alerts")]
        public string EmailAlerts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_alerts_sleep_until")]
        public int? EmailAlertsSleepUntil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_developer")]
        public bool? EmailDeveloper { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_misc")]
        public bool? EmailMisc { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_offers")]
        public bool? EmailOffers { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_research")]
        public bool? EmailResearch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_tips")]
        public bool? EmailTips { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_weekly")]
        public bool? EmailWeekly { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emoji_autocomplete_big")]
        public bool? EmojiAutocompleteBig { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emoji_mode")]
        public string EmojiMode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emoji_use")]
        public string EmojiUse { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enable_react_emoji_picker")]
        public bool? EnableReactEmojiPicker { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enable_unread_view")]
        public bool? EnableUnreadView { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enhanced_debugging")]
        public bool? EnhancedDebugging { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ent_org_wide_channels_sidebar")]
        public bool? EntOrgWideChannelsSidebar { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enter_is_special_in_tbt")]
        public bool? EnterIsSpecialInTbt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enterprise_excluded_app_teams")]
        public object EnterpriseExcludedAppTeams { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enterprise_mdm_custom_msg")]
        public string EnterpriseMdmCustomMsg { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enterprise_migration_seen")]
        public bool? EnterpriseMigrationSeen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expand_inline_imgs")]
        public bool? ExpandInlineImgs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expand_internal_inline_imgs")]
        public bool? ExpandInternalInlineImgs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expand_non_media_attachments")]
        public bool? ExpandNonMediaAttachments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "expand_snippets")]
        public bool? ExpandSnippets { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "f_key_search")]
        public bool? FKeySearch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "flannel_server_pool")]
        public string FlannelServerPool { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "folder_data")]
        public string FolderData { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "folders_enabled")]
        public bool? FoldersEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "frecency_ent_jumper")]
        public string FrecencyEntJumper { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "frecency_ent_jumper_backup")]
        public string FrecencyEntJumperBackup { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "frecency_jumper")]
        public string FrecencyJumper { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "full_text_extracts")]
        public bool? FullTextExtracts { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fuller_timestamps")]
        public bool? FullerTimestamps { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gdrive_authed")]
        public bool? GdriveAuthed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "gdrive_enabled")]
        public bool? GdriveEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "graphic_emoticons")]
        public bool? GraphicEmoticons { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growls_enabled")]
        public bool? GrowlsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_all_banners_prefs")]
        public string GrowthAllBannersPrefs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_approaching_cta_count")]
        public int? GrowthMsgLimitApproachingCtaCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_approaching_cta_ts")]
        public int? GrowthMsgLimitApproachingCtaTs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_long_reached_cta_count")]
        public int? GrowthMsgLimitLongReachedCtaCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_long_reached_cta_last_ts")]
        public int? GrowthMsgLimitLongReachedCtaLastTs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_reached_cta_count")]
        public int? GrowthMsgLimitReachedCtaCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_reached_cta_last_ts")]
        public int? GrowthMsgLimitReachedCtaLastTs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_sixty_day_banner_cta_count")]
        public int? GrowthMsgLimitSixtyDayBannerCtaCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "growth_msg_limit_sixty_day_banner_cta_last_ts")]
        public int? GrowthMsgLimitSixtyDayBannerCtaLastTs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "has_created_channel")]
        public bool? HasCreatedChannel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "has_invited")]
        public bool? HasInvited { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "has_recently_shared_a_channel")]
        public bool? HasRecentlySharedAChannel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "has_searched")]
        public bool? HasSearched { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "has_uploaded")]
        public bool? HasUploaded { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hide_hex_swatch")]
        public bool? HideHexSwatch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hide_user_group_info_pane")]
        public bool? HideUserGroupInfoPane { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "highlight_words")]
        public string HighlightWords { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "in_interactive_mas_migration_flow")]
        public bool? InInteractiveMasMigrationFlow { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "intro_to_apps_message_seen")]
        public bool? IntroToAppsMessageSeen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "jumbomoji")]
        public bool? Jumbomoji { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "k_key_omnibox")]
        public bool? KKeyOmnibox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "k_key_omnibox_auto_hide_count")]
        public int? KKeyOmniboxAutoHideCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "keyboard")]
        public object Keyboard { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_seen_at_channel_warning")]
        public int? LastSeenAtChannelWarning { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_snippet_type")]
        public string LastSnippetType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_tos_acknowledged")]
        public string LastTosAcknowledged { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lessons_enabled")]
        public bool? LessonsEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "load_lato_2")]
        public bool? LoadLato2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locale")]
        public string Locale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locales_enabled")]
        public PrefsPrefsLocalesEnabled LocalesEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loud_channels")]
        public string LoudChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "loud_channels_set")]
        public string LoudChannelsSet { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ls_disabled")]
        public bool? LsDisabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mac_ssb_bounce")]
        public string MacSsbBounce { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mac_ssb_bullet")]
        public bool? MacSsbBullet { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mark_msgs_read_immediately")]
        public bool? MarkMsgsReadImmediately { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "measure_css_usage")]
        public bool? MeasureCssUsage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mentions_exclude_at_channels")]
        public bool? MentionsExcludeAtChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mentions_exclude_at_user_groups")]
        public bool? MentionsExcludeAtUserGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "messages_theme")]
        public string MessagesTheme { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msg_input_send_btn")]
        public bool? MsgInputSendBtn { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msg_input_send_btn_auto_set")]
        public bool? MsgInputSendBtnAutoSet { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msg_preview")]
        public bool? MsgPreview { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "msg_preview_persistent")]
        public bool? MsgPreviewPersistent { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mute_sounds")]
        public bool? MuteSounds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "muted_channels")]
        public string MutedChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "never_channels")]
        public string NeverChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "new_msg_snd")]
        public string NewMsgSnd { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "newxp_seen_last_message")]
        public int? NewxpSeenLastMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_created_overlays")]
        public bool? NoCreatedOverlays { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_invites_widget_in_sidebar")]
        public bool? NoInvitesWidgetInSidebar { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_joined_overlays")]
        public bool? NoJoinedOverlays { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_macelectron_banner")]
        public bool? NoMacelectronBanner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_macssb1_banner")]
        public bool? NoMacssb1Banner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_macssb2_banner")]
        public bool? NoMacssb2Banner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_omnibox_in_channels")]
        public bool? NoOmniboxInChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_text_in_notifications")]
        public bool? NoTextInNotifications { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "no_winssb1_banner")]
        public bool? NoWinssb1Banner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "obey_inline_img_limit")]
        public bool? ObeyInlineImgLimit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onboarding_cancelled")]
        public bool? OnboardingCancelled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "onboarding_slackbot_conversation_step")]
        public int? OnboardingSlackbotConversationStep { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overloaded_message_enabled")]
        public bool? OverloadedMessageEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pagekeys_handled")]
        public bool? PagekeysHandled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "posts_formatting_guide")]
        public bool? PostsFormattingGuide { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "preferred_skin_tone")]
        public string PreferredSkinTone { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "privacy_policy_seen")]
        public bool? PrivacyPolicySeen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "prompted_for_email_disabling")]
        public bool? PromptedForEmailDisabling { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "purchaser")]
        public bool? Purchaser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_at_channel_suppressed_channels")]
        public string PushAtChannelSuppressedChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_dm_alert")]
        public bool? PushDmAlert { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_everything")]
        public bool? PushEverything { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_idle_wait")]
        public int? PushIdleWait { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_loud_channels")]
        public string PushLoudChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_loud_channels_set")]
        public string PushLoudChannelsSet { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_mention_alert")]
        public bool? PushMentionAlert { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_mention_channels")]
        public string PushMentionChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_show_preview")]
        public bool? PushShowPreview { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "push_sound")]
        public string PushSound { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "require_at")]
        public bool? RequireAt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "search_exclude_bots")]
        public bool? SearchExcludeBots { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "search_exclude_channels")]
        public string SearchExcludeChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "search_only_current_team")]
        public bool? SearchOnlyCurrentTeam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "search_only_my_channels")]
        public bool? SearchOnlyMyChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "search_sort")]
        public string SearchSort { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_administration_menu")]
        public bool? SeenAdministrationMenu { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_app_space_coachmark")]
        public bool? SeenAppSpaceCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_app_space_tutorial")]
        public bool? SeenAppSpaceTutorial { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_calls_interactive_coachmark")]
        public bool? SeenCallsInteractiveCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_channel_browser_admin_coachmark")]
        public bool? SeenChannelBrowserAdminCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_custom_status_badge")]
        public bool? SeenCustomStatusBadge { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_custom_status_callout")]
        public bool? SeenCustomStatusCallout { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_domain_invite_reminder")]
        public bool? SeenDomainInviteReminder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_emoji_update_overlay_coachmark")]
        public bool? SeenEmojiUpdateOverlayCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_gdrive_coachmark")]
        public bool? SeenGdriveCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_guest_admin_slackbot_announcement")]
        public bool? SeenGuestAdminSlackbotAnnouncement { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_highlights_arrows_coachmark")]
        public bool? SeenHighlightsArrowsCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_highlights_coachmark")]
        public bool? SeenHighlightsCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_highlights_warm_welcome")]
        public bool? SeenHighlightsWarmWelcome { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_intl_channel_names_coachmark")]
        public bool? SeenIntlChannelNamesCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_japanese_locale_change_message")]
        public bool? SeenJapaneseLocaleChangeMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_keyboard_shortcuts_coachmark")]
        public bool? SeenKeyboardShortcutsCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_locale_change_message")]
        public int? SeenLocaleChangeMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_member_invite_reminder")]
        public bool? SeenMemberInviteReminder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_name_tagging_coachmark")]
        public bool? SeenNameTaggingCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_banner")]
        public bool? SeenOnboardingBanner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_channels")]
        public bool? SeenOnboardingChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_direct_messages")]
        public bool? SeenOnboardingDirectMessages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_invites")]
        public bool? SeenOnboardingInvites { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_private_groups")]
        public bool? SeenOnboardingPrivateGroups { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_recent_mentions")]
        public bool? SeenOnboardingRecentMentions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_search")]
        public bool? SeenOnboardingSearch { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_slackbot_conversation")]
        public bool? SeenOnboardingSlackbotConversation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_starred_items")]
        public bool? SeenOnboardingStarredItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_onboarding_start")]
        public bool? SeenOnboardingStart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_shared_channels_coachmark")]
        public bool? SeenSharedChannelsCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_shared_channels_opt_in_change_message")]
        public bool? SeenSharedChannelsOptInChangeMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_shdep_slackbot_message")]
        public bool? SeenShdepSlackbotMessage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_single_emoji_msg")]
        public bool? SeenSingleEmojiMsg { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_ssb_prompt")]
        public bool? SeenSsbPrompt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_threads_notification_banner")]
        public bool? SeenThreadsNotificationBanner { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_unread_view_coachmark")]
        public bool? SeenUnreadViewCoachmark { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "seen_welcome_2")]
        public bool? SeenWelcome2 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "separate_private_channels")]
        public bool? SeparatePrivateChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "separate_shared_channels")]
        public bool? SeparateSharedChannels { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "shdep_promo_code_submitted")]
        public bool? ShdepPromoCodeSubmitted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_all_skin_tones")]
        public bool? ShowAllSkinTones { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_ent_onboarding")]
        public bool? ShowEntOnboarding { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_jumper_scores")]
        public bool? ShowJumperScores { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_memory_instrument")]
        public bool? ShowMemoryInstrument { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_sidebar_quickswitcher_button")]
        public bool? ShowSidebarQuickswitcherButton { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "show_typing")]
        public bool? ShowTyping { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sidebar_behavior")]
        public string SidebarBehavior { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sidebar_theme")]
        public string SidebarTheme { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sidebar_theme_custom_values")]
        public string SidebarThemeCustomValues { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "snippet_editor_wrap_long_lines")]
        public bool? SnippetEditorWrapLongLines { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "spaces_new_xp_banner_dismissed")]
        public bool? SpacesNewXpBannerDismissed { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ss_emojis")]
        public bool? SsEmojis { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ssb_space_window")]
        public string SsbSpaceWindow { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "start_scroll_at_oldest")]
        public bool? StartScrollAtOldest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tab_ui_return_selects")]
        public bool? TabUiReturnSelects { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "threads_everything")]
        public bool? ThreadsEverything { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "time24")]
        public bool? Time24 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "two_factor_auth_enabled")]
        public bool? TwoFactorAuthEnabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "two_factor_backup_type")]
        public object TwoFactorBackupType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "two_factor_type")]
        public object TwoFactorType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tz")]
        public string Tz { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user_colors")]
        public string UserColors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "webapp_spellcheck")]
        public bool? WebappSpellcheck { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "welcome_message_hidden")]
        public bool? WelcomeMessageHidden { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "whats_new_read")]
        public int? WhatsNewRead { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "winssb_run_from_tray")]
        public bool? WinssbRunFromTray { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "winssb_window_flash_behavior")]
        public string WinssbWindowFlashBehavior { get; set; }

    }
}
