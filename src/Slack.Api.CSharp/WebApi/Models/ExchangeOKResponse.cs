// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// migration.exchange success schema
    /// </summary>
    /// <remarks>
    /// Schema for successful response from migration.exchange method
    /// </remarks>
    public partial class ExchangeOKResponse
    {
        /// <summary>
        /// Initializes a new instance of the ExchangeOKResponse class.
        /// </summary>
        public ExchangeOKResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ExchangeOKResponse class.
        /// </summary>
        /// <param name="enterpriseId">The enterprise grid organization ID
        /// containing the workspace/team.</param>
        /// <param name="invalidUserIds">A list of User IDs that cannot be
        /// mapped or found</param>
        /// <param name="userIdMap">A mapping of provided user IDs with mapped
        /// user IDs</param>
        public ExchangeOKResponse(string enterpriseId, string teamId, IList<string> invalidUserIds = default(IList<string>), object userIdMap = default(object))
        {
            EnterpriseId = enterpriseId;
            InvalidUserIds = invalidUserIds;
            TeamId = teamId;
            UserIdMap = userIdMap;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for ExchangeOKResponse class.
        /// </summary>
        static ExchangeOKResponse()
        {
            Ok = true;
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the enterprise grid organization ID containing the
        /// workspace/team.
        /// </summary>
        [JsonProperty(PropertyName = "enterprise_id")]
        public string EnterpriseId { get; set; }

        /// <summary>
        /// Gets or sets a list of User IDs that cannot be mapped or found
        /// </summary>
        [JsonProperty(PropertyName = "invalid_user_ids")]
        public IList<string> InvalidUserIds { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "team_id")]
        public string TeamId { get; set; }

        /// <summary>
        /// Gets or sets a mapping of provided user IDs with mapped user IDs
        /// </summary>
        [JsonProperty(PropertyName = "user_id_map")]
        public object UserIdMap { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ok")]
        public static bool Ok { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (EnterpriseId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "EnterpriseId");
            }
            if (TeamId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "TeamId");
            }
        }
    }
}
