// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class ObjsUserProfileShort
    {
        /// <summary>
        /// Initializes a new instance of the ObjsUserProfileShort class.
        /// </summary>
        public ObjsUserProfileShort()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ObjsUserProfileShort class.
        /// </summary>
        public ObjsUserProfileShort(string avatarHash, string displayName, string firstName, string image72, bool isRestricted, bool isUltraRestricted, string name, string realName, string team)
        {
            AvatarHash = avatarHash;
            DisplayName = displayName;
            FirstName = firstName;
            Image72 = image72;
            IsRestricted = isRestricted;
            IsUltraRestricted = isUltraRestricted;
            Name = name;
            RealName = realName;
            Team = team;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "avatar_hash")]
        public string AvatarHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "display_name")]
        public string DisplayName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "first_name")]
        public string FirstName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "image_72")]
        public string Image72 { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_restricted")]
        public bool IsRestricted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_ultra_restricted")]
        public bool IsUltraRestricted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "real_name")]
        public string RealName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "team")]
        public string Team { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AvatarHash == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "AvatarHash");
            }
            if (DisplayName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "DisplayName");
            }
            if (FirstName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "FirstName");
            }
            if (Image72 == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Image72");
            }
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (RealName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RealName");
            }
            if (Team == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Team");
            }
        }
    }
}
