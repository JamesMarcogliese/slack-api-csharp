// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// conversations.replies success schema
    /// </summary>
    /// <remarks>
    /// Schema for successful response from conversations.replies method
    /// </remarks>
    public partial class RepliesOKResponseModel
    {
        /// <summary>
        /// Initializes a new instance of the RepliesOKResponseModel class.
        /// </summary>
        public RepliesOKResponseModel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RepliesOKResponseModel class.
        /// </summary>
        public RepliesOKResponseModel(IList<object> messages, bool? hasMore = default(bool?))
        {
            HasMore = hasMore;
            Messages = messages;
            CustomInit();
        }
        /// <summary>
        /// Static constructor for RepliesOKResponseModel class.
        /// </summary>
        static RepliesOKResponseModel()
        {
            Ok = true;
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "has_more")]
        public bool? HasMore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "messages")]
        public IList<object> Messages { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ok")]
        public static bool Ok { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Messages == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Messages");
            }
        }
    }
}
