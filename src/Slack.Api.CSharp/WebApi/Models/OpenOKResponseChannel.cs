// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OpenOKResponseChannel
    {
        /// <summary>
        /// Initializes a new instance of the OpenOKResponseChannel class.
        /// </summary>
        public OpenOKResponseChannel()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OpenOKResponseChannel class.
        /// </summary>
        public OpenOKResponseChannel(string id, string created = default(string), bool? isIm = default(bool?), bool? isOpen = default(bool?), string lastRead = default(string), ObjsMessage latest = default(ObjsMessage), double? unreadCount = default(double?), double? unreadCountDisplay = default(double?), string user = default(string))
        {
            Created = created;
            Id = id;
            IsIm = isIm;
            IsOpen = isOpen;
            LastRead = lastRead;
            Latest = latest;
            UnreadCount = unreadCount;
            UnreadCountDisplay = unreadCountDisplay;
            User = user;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public string Created { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_im")]
        public bool? IsIm { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "is_open")]
        public bool? IsOpen { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "last_read")]
        public string LastRead { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "latest")]
        public ObjsMessage Latest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unread_count")]
        public double? UnreadCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unread_count_display")]
        public double? UnreadCountDisplay { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "user")]
        public string User { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Id == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Id");
            }
            if (Latest != null)
            {
                Latest.Validate();
            }
        }
    }
}
