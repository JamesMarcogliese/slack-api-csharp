// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Search operations.
    /// </summary>
    public partial interface ISearch
    {
        /// <summary>
        /// Searches for messages and files matching a query.
        /// <see href="https://api.slack.com/methods/search.all" />
        /// </summary>
        /// <param name='sortDir'>
        /// Change sort direction to ascending (`asc`) or descending (`desc`).
        /// </param>
        /// <param name='query'>
        /// Search query. May contains booleans, etc.
        /// </param>
        /// <param name='sort'>
        /// Return matches sorted by either `score` or `timestamp`.
        /// </param>
        /// <param name='count'>
        /// </param>
        /// <param name='token'>
        /// Authentication token. Requires scope: `search:read`
        /// </param>
        /// <param name='highlight'>
        /// Pass a value of `true` to enable query highlight markers (see
        /// below).
        /// </param>
        /// <param name='page'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="AllErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<AllOKResponse>> AllWithHttpMessagesAsync(string sortDir = default(string), string query = default(string), string sort = default(string), string count = default(string), string token = default(string), bool? highlight = default(bool?), string page = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Searches for files matching a query.
        /// <see href="https://api.slack.com/methods/search.files" />
        /// </summary>
        /// <param name='sortDir'>
        /// Change sort direction to ascending (`asc`) or descending (`desc`).
        /// </param>
        /// <param name='query'>
        /// Search query.
        /// </param>
        /// <param name='sort'>
        /// Return matches sorted by either `score` or `timestamp`.
        /// </param>
        /// <param name='highlight'>
        /// Pass a value of `true` to enable query highlight markers (see
        /// below).
        /// </param>
        /// <param name='count'>
        /// </param>
        /// <param name='token'>
        /// Authentication token. Requires scope: `search:read`
        /// </param>
        /// <param name='page'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="FilesErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<FilesOKResponse>> FilesMethodWithHttpMessagesAsync(string sortDir = default(string), string query = default(string), string sort = default(string), bool? highlight = default(bool?), string count = default(string), string token = default(string), string page = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Searches for messages matching a query.
        /// <see href="https://api.slack.com/methods/search.messages" />
        /// </summary>
        /// <param name='sortDir'>
        /// Change sort direction to ascending (`asc`) or descending (`desc`).
        /// </param>
        /// <param name='query'>
        /// Search query.
        /// </param>
        /// <param name='sort'>
        /// Return matches sorted by either `score` or `timestamp`.
        /// </param>
        /// <param name='count'>
        /// Pass the number of results you want per "page". Maximum of `100`.
        /// </param>
        /// <param name='token'>
        /// Authentication token. Requires scope: `search:read`
        /// </param>
        /// <param name='highlight'>
        /// Pass a value of `true` to enable query highlight markers (see
        /// below).
        /// </param>
        /// <param name='page'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="MessagesErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<MessagesOKResponse>> MessagesWithHttpMessagesAsync(string sortDir = default(string), string query = default(string), string sort = default(string), string count = default(string), string token = default(string), bool? highlight = default(bool?), string page = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
