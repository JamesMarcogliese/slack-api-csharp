// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Stars operations.
    /// </summary>
    public partial interface IStars
    {
        /// <summary>
        /// Adds a star to an item.
        /// <see href="https://api.slack.com/methods/stars.add" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `stars:write`
        /// </param>
        /// <param name='fileComment'>
        /// File comment to add star to.
        /// </param>
        /// <param name='timestamp'>
        /// Timestamp of the message to add star to.
        /// </param>
        /// <param name='channel'>
        /// Channel to add star to, or channel where the message to add star to
        /// was posted (used with `timestamp`).
        /// </param>
        /// <param name='file'>
        /// File to add star to.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="AddErrorModel4Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<AddOKResponseModelModelModel>> AddWithHttpMessagesAsync(string token = default(string), string fileComment = default(string), double? timestamp = default(double?), string channel = default(string), string file = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Lists stars for a user.
        /// <see href="https://api.slack.com/methods/stars.list" />
        /// </summary>
        /// <param name='count'>
        /// </param>
        /// <param name='token'>
        /// Authentication token. Requires scope: `stars:read`
        /// </param>
        /// <param name='page'>
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ListErrorModel12Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<ListOKResponseModelModelModelModel>> ListWithHttpMessagesAsync(string count = default(string), string token = default(string), string page = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Removes a star from an item.
        /// <see href="https://api.slack.com/methods/stars.remove" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `stars:write`
        /// </param>
        /// <param name='fileComment'>
        /// File comment to remove star from.
        /// </param>
        /// <param name='timestamp'>
        /// Timestamp of the message to remove star from.
        /// </param>
        /// <param name='channel'>
        /// Channel to remove star from, or channel where the message to remove
        /// star from was posted (used with `timestamp`).
        /// </param>
        /// <param name='file'>
        /// File to remove star from.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="RemoveErrorModel2Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<RemoveOKResponseModelModel>> RemoveWithHttpMessagesAsync(string token = default(string), string fileComment = default(string), double? timestamp = default(double?), string channel = default(string), string file = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
