// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Reminders.
    /// </summary>
    public static partial class RemindersExtensions
    {
            /// <summary>
            /// Creates a reminder.
            /// <see href="https://api.slack.com/methods/reminders.add" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:write`
            /// </param>
            /// <param name='text'>
            /// The content of the reminder
            /// </param>
            /// <param name='user'>
            /// The user who will receive the reminder. If no user is specified, the
            /// reminder will go to user who created it.
            /// </param>
            /// <param name='time'>
            /// When this reminder should happen: the Unix timestamp (up to five years from
            /// now), the number of seconds until the reminder (if within 24 hours), or a
            /// natural language description (Ex. "in 15 minutes," or "every Thursday")
            /// </param>
            public static AddOKResponseModelModelModel Add(this IReminders operations, string token = default(string), string text = default(string), string user = default(string), string time = default(string))
            {
                return operations.AddAsync(token, text, user, time).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a reminder.
            /// <see href="https://api.slack.com/methods/reminders.add" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:write`
            /// </param>
            /// <param name='text'>
            /// The content of the reminder
            /// </param>
            /// <param name='user'>
            /// The user who will receive the reminder. If no user is specified, the
            /// reminder will go to user who created it.
            /// </param>
            /// <param name='time'>
            /// When this reminder should happen: the Unix timestamp (up to five years from
            /// now), the number of seconds until the reminder (if within 24 hours), or a
            /// natural language description (Ex. "in 15 minutes," or "every Thursday")
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<AddOKResponseModelModelModel> AddAsync(this IReminders operations, string token = default(string), string text = default(string), string user = default(string), string time = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddWithHttpMessagesAsync(token, text, user, time, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Marks a reminder as complete.
            /// <see href="https://api.slack.com/methods/reminders.complete" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:write`
            /// </param>
            /// <param name='reminder'>
            /// The ID of the reminder to be marked as complete
            /// </param>
            public static CompleteOKResponse Complete(this IReminders operations, string token = default(string), string reminder = default(string))
            {
                return operations.CompleteAsync(token, reminder).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Marks a reminder as complete.
            /// <see href="https://api.slack.com/methods/reminders.complete" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:write`
            /// </param>
            /// <param name='reminder'>
            /// The ID of the reminder to be marked as complete
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<CompleteOKResponse> CompleteAsync(this IReminders operations, string token = default(string), string reminder = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CompleteWithHttpMessagesAsync(token, reminder, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a reminder.
            /// <see href="https://api.slack.com/methods/reminders.delete" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:write`
            /// </param>
            /// <param name='reminder'>
            /// The ID of the reminder
            /// </param>
            public static DeleteOKResponseModelModelModel Delete(this IReminders operations, string token = default(string), string reminder = default(string))
            {
                return operations.DeleteAsync(token, reminder).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a reminder.
            /// <see href="https://api.slack.com/methods/reminders.delete" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:write`
            /// </param>
            /// <param name='reminder'>
            /// The ID of the reminder
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<DeleteOKResponseModelModelModel> DeleteAsync(this IReminders operations, string token = default(string), string reminder = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.DeleteWithHttpMessagesAsync(token, reminder, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets information about a reminder.
            /// <see href="https://api.slack.com/methods/reminders.info" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:read`
            /// </param>
            /// <param name='reminder'>
            /// The ID of the reminder
            /// </param>
            public static InfoOKResponse Info(this IReminders operations, string token = default(string), string reminder = default(string))
            {
                return operations.InfoAsync(token, reminder).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets information about a reminder.
            /// <see href="https://api.slack.com/methods/reminders.info" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:read`
            /// </param>
            /// <param name='reminder'>
            /// The ID of the reminder
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<InfoOKResponse> InfoAsync(this IReminders operations, string token = default(string), string reminder = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.InfoWithHttpMessagesAsync(token, reminder, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Lists all reminders created by or for a given user.
            /// <see href="https://api.slack.com/methods/reminders.list" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:read`
            /// </param>
            public static ListOKResponseModelModelModelModel List(this IReminders operations, string token = default(string))
            {
                return operations.ListAsync(token).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Lists all reminders created by or for a given user.
            /// <see href="https://api.slack.com/methods/reminders.list" />
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='token'>
            /// Authentication token. Requires scope: `reminders:read`
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ListOKResponseModelModelModelModel> ListAsync(this IReminders operations, string token = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ListWithHttpMessagesAsync(token, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
