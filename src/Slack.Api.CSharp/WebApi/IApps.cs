// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Slack.Api.CSharp.WebApi
{
    using Microsoft.Rest;
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Apps operations.
    /// </summary>
    public partial interface IApps
    {
        /// <summary>
        /// Returns list of permissions this app has on a team.
        /// <see href="https://api.slack.com/methods/apps.permissions.info" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `none`
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="InfoErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<InfoOKResponse>> InfoWithHttpMessagesAsync(string token = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Allows an app to request additional scopes
        /// <see href="https://api.slack.com/methods/apps.permissions.request" />
        /// </summary>
        /// <param name='scopes'>
        /// A comma separated list of scopes to request for
        /// </param>
        /// <param name='token'>
        /// Authentication token. Requires scope: `none`
        /// </param>
        /// <param name='triggerId'>
        /// Token used to trigger the permissions API
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="RequestErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<RequestOKResponse>> RequestWithHttpMessagesAsync(string scopes = default(string), string token = default(string), string triggerId = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns list of resource grants this app has on a team.
        /// <see href="https://api.slack.com/methods/apps.permissions.resources.list" />
        /// </summary>
        /// <param name='cursor'>
        /// Paginate through collections of data by setting the `cursor`
        /// parameter to a `next_cursor` attribute returned by a previous
        /// request's `response_metadata`. Default value fetches the first
        /// "page" of the collection. See [pagination](/docs/pagination) for
        /// more detail.
        /// </param>
        /// <param name='token'>
        /// Authentication token. Requires scope: `none`
        /// </param>
        /// <param name='limit'>
        /// The maximum number of items to return.
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ListErrorModelException">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<ListOKResponse>> ListWithHttpMessagesAsync(string cursor = default(string), string token = default(string), int? limit = default(int?), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
        /// <summary>
        /// Returns list of scopes this app has on a team.
        /// <see href="https://api.slack.com/methods/apps.permissions.scopes.list" />
        /// </summary>
        /// <param name='token'>
        /// Authentication token. Requires scope: `none`
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        /// <exception cref="ListErrorModel1Exception">
        /// Thrown when the operation returned an invalid status code
        /// </exception>
        /// <exception cref="Microsoft.Rest.SerializationException">
        /// Thrown when unable to deserialize the response
        /// </exception>
        Task<HttpOperationResponse<ListOKResponseModel>> List1WithHttpMessagesAsync(string token = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));
    }
}
